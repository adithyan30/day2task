
Difference Between Document & Windows Object:-

Document Object:
 * The document object represent a web page that is loaded in the browser. By accessing the document object, we can access the element in the HTML page.
 * With the help of document objects, we can add dynamic content to our web page. The document object can be accessed with a window.document or just document.
 
 Methods of Document:

  Syntax:

   document.method_name;
    
  The lists of most commonly used methods are listed below:

  * addEventListener(): It is used to attach an event handler to the specified element.
  * adoptNode(): It is used to adopt a node from another document and it returns a node object, representing the adopted node.
  * close(): It is used to close the output stream.
  * createAttribute(): It is used to create an attribute node with the specified name and returns the attribute object.
  * createComment(): It is used to create a comment node with some text.
  * createDocumentFragment(): It is used to create the document fragment to change the content of the document.
  * createElement(): It is used to create HTML element .
  * createEvent(): It is used to create a new events object.
  * createTextNode(): It is used to create a textnode.
  * execCommand(): It is used to execute a command specified by the user on the editable selected section. It returns a Boolean value.
  * fullscreenEnabled(): It is used to check whether the document can be viewed in fullscreen mode or not. It returns a boolean value.
  * getElementById(): It returns the object of the given ID. If no object with that id exists then it returns null.
  * getElementsByClassName(): It returns an object containing all the elements with the specified class names in the document as objects.
  * getElementsByName(): It returns an object containing all the elements with the specified name in the document as objects.
  * getElementsByTagName(): It returns an object containing all the elements with the specified tag names in the document as objects.
  * hasFocus(): It returns a boolean value that indicates whether the document or element has focus or not.
  * mportNode(): It imports the copy of a node from another document in the current document.
  * normalize(): It flushes out the empty nodes and merges the adjacent text nodes with the first text node and
  * normalizeDocument(): It is used to normalize an HTML document by removing any empty text nodes and joining the adjacent text nodes.
  * open(): It is used to open the output stream to collect the output.
  * querySelector(): It returns the first element that matches a specified CSS selector(s) in the document.
  * querySelectorAll(): It returns a collection of an elementâ€™s child elements that matches a specified CSS selector(s) in the document
  * removeEventListener(): It removes the event handler from an element that has an attached event.
  * renameNode(): It is used to rename the node.
  * write(): It is used to write some content or javascript code in the document.
  * writeln(): It is used to write a document with a newline character after each statement.
  
  Window Object:- 
  
      The window object is the topmost object of the DOM hierarchy. It represents a browser window or frame that displays the contents of the webpage.
   Whenever a window appears on the screen to display the contents of the document, the window object is created. 
      Syntax:
               window.property_name;
   Methods of Window:-

    Syntax:
            window.method_name;
  The methods of Window objects that are commonly used are listed in the below table:

  * alert(): It is used to display an alert box. It displays a specified message along with an OK button and is generally used to make sure that
    the information comes through the user.
  * atob(): It is used for decoding a base-64 encoded string. It is used to decode a string of data that has
  * syntax:

      document.propertyname;been encoded using the btoa() method.
  * blur(): It is used to remove focus from the current window.
  * btoa(): It is used for encoding a string in base-64 format.
  * clearInterval(): It clears the interval which has been set by the setInterval() function before that.
  * clearTimeout(): It clears the timeout which has been set by the setTimeout()function before that.
  * close(): It is used for closing a certain window or tab of the browser which was previously opened.
  * confirm(): It is used to display a modal dialog with an optional message and two buttons 
  * focus(): It is used to give focus to an element in the current window.
  * getComputedStyle(): It is used to get all the computed CSS properties and values of the specified element.
  * getSelection(): It returns a Selection object representing the range of text selected by the user            
   
   Difference between document and window:-
   
   Document:-
    * It represents any HTML document or web page that is loaded in the browser.
    * It is loaded inside the window
    * It is the object of window property.
    * All the tags, elements with attributes in HTML are part of the document.
    * We can access the document from a window using the window. document
    * The document is part of BOM (browser object model) and dom (Document object model)
    * Properties of document objects such as title, body, cookies, etc can also be accessed by a window like this window. document.title
    * syntax:
        document.propertyname;
        
    * example:
         document.title :  will return the title of the document
         
   Window:-
    * It represents a browser window or frame that displays the contents of the webpage.   
    * It is the very first object that is loaded in the browser.
    * It is the object of the browser.
    * Global objects, functions, and variables of JavaScript are members of the window object.
    * We can access the window from the window only. i.e. window.window
    * The window is part of BOM, not DOM.
    * Properties of the window object cannot be accessed by the document object.
    * syntax:
        window.propertyname;
    * example:
        window.innerHeight : will return the height of the content area of the browser
        
        
        
        
       
    
